swagger: '2.0'
info:
    version: '2.0.0'
    title: tigo_co_selfcare_crm_v1 
    description: |
     This is a standard Api for CO B2B and B2C Selfcare CRM 
    termsOfService: http://swagger.io/terms/
    contact:
        name: Andrea Forneron
        email: andrea.forneron@edge.com.py
        url: https://edge.com.py
    license:
        name: MIT
        url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: test.api.tigo.com
basePath: /v1/tigo/co/selfcare/crm
schemes:
    - https
consumes:
    - application/json
produces:
    - application/json
securityDefinitions:
    application:
        type: oauth2
        tokenUrl: https://test.api.tigo.com/oauth/client_credential/accesstoken?grant_type=client_credentials
        flow: application
        scopes:
            read: Customer CRM 
security:
  - application:
    - read    
#                        /$$     /$$
#                       | $$    | $$
#   /$$$$$$   /$$$$$$  /$$$$$$  | $$$$$$$   /$$$$$$$
#  /$$__  $$ |____  $$|_  $$_/  | $$__  $$ /$$_____/
# | $$  \ $$  /$$$$$$$  | $$    | $$  \ $$|  $$$$$$
# | $$  | $$ /$$__  $$  | $$ /$$| $$  | $$ \____  $$
# | $$$$$$$/|  $$$$$$$  |  $$$$/| $$  | $$ /$$$$$$$/
# | $$____/  \_______/   \___/  |__/  |__/|_______/
# | $$
# | $$
# |__/

paths:

  #getCommonCauseByCustomerId
  /customers/{idType}/{id}/damages/causes:
    get:
      summary: Find the list of damages for common causes taking the customer's document as the initial parameter.
      description: Taking the customer's document as the initial parameter, return the list of damages for common causes
      operationId: findCommonCauseByCustomerId
      tags:
        - Damages
      parameters:       
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/idType"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/detailsCauses'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
  #getSMNETByIdService
  /services/{idService}:
    post:
      summary: Executes automatic diagnostic tests of standard services taking the service id as the initial parameter.
      description: Taking as initial parameter the id of the service executes automatic tests of diagnosis of standard services.
      operationId: findSMNETByIdService
      tags:
        - Services
      parameters:       
        - $ref: "#/parameters/idService"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/detailsServices'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
  #getSMNETByIdTest
  /test/{idTest}/reports:
    get:
      summary: Find the query on a specific integrated test taking the id of the test as the initial parameter.
      description: Taking as the initial parameter the id of the test, find the query on a specific integrated test
      operationId: findSMNETByIdTest
      tags:
        - Services
      parameters:       
        - $ref: "#/parameters/idTest"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/detailsReports'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
  #postCreateDamages
  /damages:
    post:
      summary: Creates damage that will be taken care of by tigoune.
      description: Taking initial parameters creates damage that will be addressed by tigoune.
      operationId: postCreateDamages
      tags:
        - Damages
      parameters:       
        - $ref: "#/parameters/damagesParameters"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/detailsDamages'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
  #postUNETTQueryQuotas
  /quotas/availables:
    post:
      summary: Returns the available quotas taking the SR number as the initial parameter.
      description: Taking the SR number as initial parameter, returns the available spaces.
      operationId: postUNETTQueryQuotas
      tags:
        - quotas
      parameters:
        - $ref: "#/parameters/queryQuotasParameters"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/queryQuotasList'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
   #postUNETTCancellQuotas
  /quotas:
    post:
      summary: Allow cancellation of the agenda by taking additional parameters.
      description: Taking additional parameters, It allows the cancellation of the scheduled technical visit.
      operationId: postUNETTCancellQuotas
      parameters:
        - $ref: "#/parameters/cancellQuotasParameters"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/cancellQuotasList'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
  #postUNETTReservationQuotas
  /quotas/reservations:
    post:
      summary: It allows to make the reservation of the technical visit.
      description: It allows to register the technical visit reservation in the agenda.
      operationId: postUNETTReservationQuotas
      parameters:
        - $ref: "#/parameters/reservationQuotasParameters"
        - $ref: "#/parameters/authorization"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/reservationQuotasList'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/errorBody'
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: Not Found.
          schema:
            $ref: '#/definitions/errorBody'
        default:
          description: Unhandled resource
          schema:
            $ref: '#/definitions/errorBody'
   
  
#                                                                  /$$                                  
#                                                                 | $$                                  
#  /$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$  /$$$$$$/$$$$   /$$$$$$  /$$$$$$    /$$$$$$   /$$$$$$   /$$$$$$$
# /$$__  $$ |____  $$ /$$__  $$|____  $$| $$_  $$_  $$ /$$__  $$|_  $$_/   /$$__  $$ /$$__  $$ /$$_____/
#| $$  \ $$  /$$$$$$$| $$  \__/ /$$$$$$$| $$ \ $$ \ $$| $$$$$$$$  | $$    | $$$$$$$$| $$  \__/|  $$$$$$ 
#| $$  | $$ /$$__  $$| $$      /$$__  $$| $$ | $$ | $$| $$_____/  | $$ /$$| $$_____/| $$       \____  $$
#| $$$$$$$/|  $$$$$$$| $$     |  $$$$$$$| $$ | $$ | $$|  $$$$$$$  |  $$$$/|  $$$$$$$| $$       /$$$$$$$/
#| $$____/  \_______/|__/      \_______/|__/ |__/ |__/ \_______/   \___/   \_______/|__/      |_______/ 
#| $$                                                                                                   
#| $$                                                                                                   
#|__/

parameters:
  id: 
    name: id
    in: path
    required: true
    type: integer
    description: "Customer Document"
  idType: 
    name: idType
    in: path
    required: true
    type: string
    description: "Type of Customer Document"
  idService: 
    name: idService
    in: path
    required: true
    type: integer
    description: "Id of Service"
  idTest: 
    name: idTest
    in: path
    required: true
    type: integer
    description: "Id of Test"
  damagesParameters:
    name: damagesParameters
    in: body
    required: true
    schema: 
      $ref: '#/definitions/damagesParameters'
    description: "Parameters necessary to create damages"  
  queryQuotasParameters: 
    name: queryQuotasParameters
    in: body
    required: true
    schema: 
      $ref: '#/definitions/queryQuotasParameters'
    description: "Parameters needed to perform the agenda query"
  cancellQuotasParameters: 
    name: cancellQuotasParameters
    in: body
    required: true
    schema: 
      $ref: '#/definitions/cancellQuotasParameters'
    description: "Parameters needed to cancel the technical visit reservation"
  reservationQuotasParameters: 
    name: reservationQuotasParameters
    in: body
    required: true
    schema: 
      $ref: '#/definitions/reservationQuotasParameters'
    description: "Parameters needed to book a technical visit"
  authorization:
    name: Authorization
    in: header
    required: true
    type: string
    description: 'Access Token provided by the Authorization Url'


#        /$$            /$$$$$$  /$$           /$$   /$$     /$$
#       | $$           /$$__  $$|__/          |__/  | $$    |__/
#   /$$$$$$$  /$$$$$$ | $$  \__/ /$$ /$$$$$$$  /$$ /$$$$$$   /$$  /$$$$$$  /$$$$$$$   /$$$$$$$
#  /$$__  $$ /$$__  $$| $$$$    | $$| $$__  $$| $$|_  $$_/  | $$ /$$__  $$| $$__  $$ /$$_____/
# | $$  | $$| $$$$$$$$| $$_/    | $$| $$  \ $$| $$  | $$    | $$| $$  \ $$| $$  \ $$|  $$$$$$
# | $$  | $$| $$_____/| $$      | $$| $$  | $$| $$  | $$ /$$| $$| $$  | $$| $$  | $$ \____  $$
# |  $$$$$$$|  $$$$$$$| $$      | $$| $$  | $$| $$  |  $$$$/| $$|  $$$$$$/| $$  | $$ /$$$$$$$/
#  \_______/ \_______/|__/      |__/|__/  |__/|__/   \___/  |__/ \______/ |__/  |__/|_______/

definitions:
  queryQuotasParameters:
    properties:
      wsFlag:
        type: string
      srNumber:
        type: string
  cancellQuotasParameters:
    properties:
      wsFlag:
        type: string
      spcId:
        type: object
        properties: 
          srNumber: 
            type: string
          backgroundFlag: 
            type: string
  reservationQuotasParameters:
    properties:
      wsFlag:
        type: string
      activityId:
        type: string        
      tipoFranja: 
        type: string
      descripcion: 
        type: string
      agendaId: 
        type: integer
      horaFinal:
        type: string
      horaInicial:
        type: string        
      fechaFinal: 
        type: string
        format: date
      cantidadAgendada: 
        type: integer
      objectId: 
        type: string
      areaTrabajo:
        type: string
      agenda:
        type: integer        
      number: 
        type: string
      areaOperativa: 
        type: string
      grupoCupo: 
        type: integer
      subZona:
        type: string
      disponible:
        type: string        
      pedido: 
        type: string
      fechaInicial: 
        type: string
        format: date
      fechaOrden: 
        type: string
        format: date
      capacidadMaxima: 
        type: string
  queryQuotasList:
    properties:
      errorSpecificCode:
        type: string
      errorSpecificMessage:
        type: string
      availableAgendaList:
        type: array
        items: 
          $ref: '#/definitions/availableAgenda'
      
  availableAgenda:
    properties:    
      subzonaId: 
        type: string
      activitySrId: 
        type: string
      idAgenda: 
        type: integer
      idGrupoCupo: 
        type: integer
      idOrderGTC: 
        type: integer
      integrationId: 
        type: integer
      areaOperativaId: 
        type: string
      areaTrabajoId: 
        type: string
      fechaFinal: 
        type: string
        format: date
      fechaOrden: 
        type: string
        format: date
      horaFinal: 
        type: string
      horaInicial:
        type: string
      tipoFranja:
        type: string
      
  cancellQuotasList:
    properties:
      errorSpecificCode:
        type: string
      errorSpecificMessage:
        type: string
    
  reservationQuotasList:
    properties:
      errorSpecificCode:
        type: string
      errorSpecificMessage:
        type: string
            
  damagesParameters:
    properties:
      measuringElement:
        type: string
      description:
        type: string
      mobile:
        type: integer
      rootCause:
        type: string
      symptomCode:
        type: string
  detailsDamages:
    type: object
    properties: 
      status:
        type: integer
      code:
        type: string
      userMessage:
        type: string
      technicalMessage:
        type: string
      dataResponse:
        type: string
        format: date-time
      contentCollection:
        $ref: '#/definitions/contentDamages'
  contentDamages: 
    type: object
    properties: 
      cun:
        type: string
      errorSpecificCode:
        type: string
      errorSpecificMessage:
        type: string
      objectSpecificId:
        type: string
      srNumber:
        type: string
      serviceRequestCollection:
        type: array
        items: 
          $ref: '#/definitions/servicesArray'
  servicesArray: 
    type: object
    properties: 
      measuringElement:
        type: string
      accountId:
        type: string
      contactId:
        type: string
      rootCause:
        type: string
      ticketType:
        type: string
      description:
        type: string
      mobile:
        type: integer
  detailsCauses: 
    type: object
    properties: 
      userMessage:
        type: string
      technicalMessage:
        type: string
      dataResponse:
        type: string
        format: date-time
      contentCollection:
        $ref: '#/definitions/content'
  content: 
    type: object
    properties: 
      errorSpecificCode:
        type: string
      errorSpecificMessage:
        type: string
      assetManagementCollection:
        type: array
        items: 
           $ref: '#/definitions/assetManagement'
  assetManagement: 
    type: object
    properties: 
      productName:
        type: string
      serviceId: 
        type: string
      infoCollection: 
        type: array
        items: 
          $ref: '#/definitions/uneSRCCCInfo'
  uneSRCCCInfo: 
    type: object
    properties: 
      commitTime:
        type: string
      integrationId: 
        type: integer
      srNumber: 
        type: string
      status:
        type: string
      subType: 
        type: string
      effectiveDate: 
        type: string
        format: date-time
  detailsServices: 
    type: object
    properties: 
      userMessage:
        type: string
      technicalMessage:
        type: string
      dataResponse:
        type: string
        format: date-time
      contentCollection:
        $ref: '#/definitions/contentServices'
  contentServices: 
    type: object
    properties: 
      statusTest:
        type: string
      startDateTest:
        type: string
        format: date-time
      endDateTest:
        type: string
        format: date-time
      idTest:
        type: integer
      diagnostic:
        type: string
      diagnosticDescription:
        type: string
      results:
        type: array
        items: 
          $ref: '#/definitions/resultsArray'
  detailsReports: 
    type: object
    properties: 
      status:
        type: integer
      code:
        type: string
      userMessage:
        type: string
      technicalMessage:
        type: string
      dataResponse:
        type: string
        format: date-time
      contentCollection:
        $ref: '#/definitions/contentReports'
  contentReports: 
    type: object
    properties: 
      statusTest:
        type: string
      startDateTest:
        type: string
        format: date-time
      endDateTest:
        type: string
        format: date-time
      idTest:
        type: integer
      diagnostic:
        type: string
      diagnosticDescription:
        type: string
      results:
          type: array
          items: 
            $ref: '#/definitions/resultsArray'
  resultsArray: 
    type: object
    properties: 
      unitTest:
        type: string
      result:
        type: string
      diagnostics:
          type: array
          items: 
            $ref: '#/definitions/diagnosticsArray'
  diagnosticsArray: 
    type: object
    properties: 
      category:
        type: string
      diagnosticCode:
        type: string
      automaticFix:
        type: string
      clientDescription:
        type: string

  # Error Response
  errorBody:
    properties:
      error:
        required:
          - statusCode
          - message
        type: object
        properties:
          statusCode:
            type: string
            description: Http Status Code
            example: "401"
          code:
            type: string
            description: Same as the http status code
            example: "401"
          message:
            type: string
            description: General message for the error
            example: "Not Authorized"
          developerMessage:
            type: string
            description: More precise info about the error
            example: "Access token was not provided or is invalid"