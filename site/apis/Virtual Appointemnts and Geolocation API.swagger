swagger: "2.0"
info:
  version: 1.0.0
  title: Virtual Appointemnts and Geolocation API
  description: | 
    This is the standard API for Self Care functions related virtual appointments and stores geolocation services for Tigo. 
    We use swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Jose Colman
    email: jose.colman@edge.com.py
    url: https://edge.com.py/
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: qa.api.tigo.com
basePath: /v1/tigo/mobile/{country}/virtual_appointment
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
  


paths:

  /appointments/{queueType}:
    get:
      summary: Get Appointments by queueType
      description: Returns a list of appointment types.
      operationId: GetAppointmentType 
      parameters:
        - name: queueType
          in: path
          description: Allowed values CALENDAR and FIFO
          required: true
          type: string
      responses:
        200:
          description: Appointments associated with provided queueType were found
          schema:
            $ref: '#/definitions/AppointmentList'
        400:
          description: Invalid Parameters
          schema:
            $ref: '#/definitions/proxyError'            
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
  /stores/{idAppointmentType}:
    get:
      summary: Get a list of stores by AppointmentType
      description: Returns a list of stores with their basic information that matches the corresponding AppointmentType
      operationId: FindStore
      parameters:
        
        - name: idAppointmentType
          in: path
          description: Id of the Appointment Type.
          required: true
          type: string
        - name: nameStore
          in: query
          description: The name of the Store that needs to be fetched.
          required: false
          type: string  
        - name: addressStore
          in: query
          description: The address of the Store that needs to be fetched.
          required: false
          type: string  
        - name: city
          in: query
          description: The schedules of the Store that needs to be fetched.
          required: false
          type: string  
        - name: state
          in: query
          description: The state of the Store that needs to be fetched.
          required: false
          type: string  
            
      responses:
        200:
          description: Requested Store list was found
          schema:
            $ref: '#/definitions/storeList'
        400:
          description: Invalid Parameters
          schema:
            $ref: '#/definitions/proxyError'     
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
            
  /stores/{idAppointmentType}/nearest:
    get:
      summary: Get a list of stores by AppointmentType and geolocation
      description: Returns a list of stores with their basic information based on the location of the user that matches the corresponding AppointmentType
      operationId: FindNearestStore
      parameters:
        - name: idAppointmentType
          in: path
          description: Id of the Appointment Type.
          required: true
          type: string
        - name: currentLatitude
          in: query
          description: The current latitude coordinate of the customer.
          required: true
          type: string  
        - name: currentLongitude
          in: query
          description: The current longitude coordinate of the customer.
          required: true
          type: string  
      responses:
        200:
          description: Requested Store list was found
          schema:
            $ref: '#/definitions/storeList'
        400:
          description: Invalid Parameters
          schema:
            $ref: '#/definitions/proxyError'     
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
  /appointments/{msisdn}:
    post:
      summary: Create a new customer appointment
      description: Create a new customer appointment
      operationId: CreateCustomerAppointment
      parameters:
        - name: msisdn
          in: path
          description: MSISDN of the customer.
          required: true
          type: string
        - name: body
          in: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/CreateCustomerAppointmentRequest'
      responses:
        201:
          description: Appointment successfully created
          schema:
            $ref: '#/definitions/Appointment'
        400:
          description: Invalid Parameters
          schema:
            $ref: '#/definitions/proxyError' 
        404:
          description: the specified `msisdn` was not found
          schema:
            $ref: '#/definitions/error' 
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
            

#####...######..######..######..##..##..######..######..######...####...##..##...####..
##..##..##......##........##....###.##....##......##......##....##..##..###.##..##.....
##..##..####....####......##....##.###....##......##......##....##..##..##.###...####..
##..##..##......##........##....##..##....##......##......##....##..##..##..##......##.
#####...######..##......######..##..##..######....##....######...####...##..##...####..

definitions:


  AppointmentList:
    type: array
    items:
      $ref: "#/definitions/AppointmentType"
  AppointmentType:
    type: object
    properties:
      idAppointmentType:
        type: string
        description: Unique Identifier for the AppointmentType
      name:
        type: string
        description: Name of the AppointmentType
      description:
        type: string
        description: Description of the AppointmentType
        
  storeList:
    type: array
    items:
      $ref: "#/definitions/store"
  store:
    type: object
    properties:
      geoStoreId:
        type: string
        description: Unique Identifier for the geoStore
      storeId:
        type: string
        description: Unique Identifier for the store
      name:
        type: string
        description: Name of the store
      zipCode:
        type: string
        description: Zipcode of the store
      address:
        type: string
        description: Address of the store
      city:
        type: string
        description: Used to show the agency schedules
      state:
        type: string
        description: Country of the store
      latitude:
        type: string
        description: Latitude coordinate of the store
      longitude:
        type: string
        description: Longitude coordinate of the store
      estimatedWaitingTime:
        type: string
        description: Estimated waiting time for the store
      waitingCount:
        type: string
        description: Waiting count for the store
 
  Appointment:
    type: object
    properties:
      appointmentId:
        type: string
        description: Unique Identifier for the Appointment
      calendarId:
        type: string
        description: Unique Identifier for the calendar
      caseId:
        type: string
        description: Unique Identifier for the case.
      processId:
        type: string
        description: Unique Identifier for the process
      ticketNumber:
        type: string
        description: Ticket number for the appointment
      
  error:
    properties:
      errorType:
        type: string
      code:
        type: integer
        format: int32
      description:
        type: string
      reason:
        type: string

  proxyError:
    properties:
      statusCode:
        type: integer
        format: int32
      message:
        type: string
      developerMessage:
        type: string

  CreateCustomerAppointmentRequest:
    type: object
    required:
      - firtsName
      - secondName
      - email
      - appointmentDate
      - idAppointmentType
      - idStore
    properties:
      firtsName:
        type: string
        description: ""
      secondName:
        type: string
        description: ""
      email:
        type: string
        description: ""
      appointmentDate:
        type: string
        description: ""
      idAppointmentType:  
        type: string
        description: Unique identifier of AppointmentType
      idStore:
        type: string
        description: ""
        