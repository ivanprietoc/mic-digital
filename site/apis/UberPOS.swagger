swagger: '2.0'
info:
  title: UberPOS
  description: UberPOS API Methods
  version: 0.1.alpha
host: test.api.tigo.com
basePath: /tigo/mobile
schemes:
  - https
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:

  /uberpos/v1/{country}/agents:
    x-summary: Agent Onboarding
    x-description: Create new UberSPOS Agents
    post:
      summary: create new agent
      description: > 
        add a new Uber POS agent to the backend. verify the `canOperate` 
        flag on the response to check if the agent is immediately 
        authorized and ready to start operating or not.
      operationId: addUberPOSAgent
      parameters:
        - name: country
          in: path
          description: country
          required: true
          type: string
          enum: 
            - bo
        - name: body
          in: body
          schema:
            $ref: '#/definitions/addUberPOSAgentRequestBody'
      responses:
        200:
          description: Ok, the agent was successfully added.
          schema:
            $ref: '#/definitions/addUberPOSAgentResponseBody'
        403:
          description: >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: the specified `msisdn` does not exist in the country
          schema:
            $ref: '#/definitions/errorBody'

  /agents/{msisdn}:
    x-summary: Agent Management
    x-description: Manage existing UberPOS Agents
    get:
      summary: get agent
      description:  > 
        return information about an existing UberPOS. If the msisdn argument
        is inexistent or does not belong to an UberPOS, the method will return
        404 (NOT FOUND)
                    
      operationId: getUberPOSAgent
      parameters:
        - name : msisdn
          in: path
          description: > 
            the msisdn of the agent, including the country prefix.
          required: true
          type: string
          x-example: 595981444528
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/getUberPOSAgentResponseBody'
        403:
          description: >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: > 
            the specified `msisdn` does not exist or is not
            an UberPOS Agent
          schema:
            $ref: '#/definitions/errorBody'
    put:
      summary: activate agent
      description: > 
        this call executes (if any) any procedures on the backend
        to activate an agent that was previously created using the 
        method `create new agent`
        
        if any prerequisite is not met, the method will return a 403
        (FORBIDDEN) response and the body will contain an explanation
        of what is required to proceed with the activation. Additionally
        to the standard error body, the `failedConditions` object will
        contain one or more messages from the country with instructions
        on how to proceed.
        
      operationId: activateUberPOSAgent                   
      parameters:                   
        - name : msisdn
          in: path
          description: the msisdn of the agent
          required: true
          type: string
      responses:
        204:
          description: Ok.
        403:
          description: 
            >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBodyActivateUberPOSAgent'
        404:
          description: the specified `msisdn` does not exist in the country.
          schema:
            $ref: '#/definitions/errorBody'

  /agents/{msisdn}/wallets:
    x-summary: Agent Wallet Management
    x-description: Manage Uber POS Wallets
    get:
      summary: get agent wallets
      description:  > 
        return information about the current agent wallets
        
      operationId: getAgentWallets
      parameters:
        - name : msisdn
          in: path
          description: > 
            the msisdn of the agent, including the country prefix.
          required: true
          type: string
          x-example: 595981444528
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/getAgentWalletsResponseBody'
        403:
          description: >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: > 
            the specified `msisdn` does not exist or is not
            an UberPOS Agent
          schema:
            $ref: '#/definitions/errorBody'

  /agentWallets:
    x-summary: Agent Wallet Management (Group)
    x-description: Manage multiple Agent Wallets
    get:
      summary: query multiple agent wallets
      description:  > 
        return information about the current agents wallets. more
        than one agent can be queried at the same time
        
      operationId: queryAgentsWalletsGroup
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/queryAgentsWalletsGroupRequestBody'
      responses:
        200:
          description: Ok.
          schema:
            $ref: '#/definitions/queryAgentsWalletsGroupResponseBody'
        403:
          description: >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: > 
            the specified `msisdn` does not exist or is not
            an UberPOS Agent
          schema:
            $ref: '#/definitions/errorBody'

  /agents/{msisdn}/transactions:
    x-summary: Transaction Management
    x-description: |
      create and query UberPOS Transactions
    post:
      summary: transfer money
      description: > 
        transfer money from the UberPOS Agent Wallet to the purchaser user
      operationId: transferMoney
      parameters:
        - name : msisdn
          in: path
          description: the msisdn of the agent
          required: true
          type: string
        - name: body
          in: body
          schema:
            $ref: '#/definitions/transferMoneyRequestBody'
      responses:
        200:
          description: > 
            Ok, the agent was successfully added.
          schema:
            $ref: '#/definitions/transferMoneyResponseBody'
        403:
          description: >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: > 
            the specified `msisdn` does not exist in the country
          schema:
            $ref: '#/definitions/errorBody'
    
    get:
      summary: query previous agent transactions
      description: > 
        query a list of transactions made by the agent in a date range
      operationId: queryTransactions
      parameters:
        - $ref: '#/parameters/msisdnPathParameter'
        - $ref: '#/parameters/startDateParam'
        - $ref: '#/parameters/endDateParam' 
        - $ref: '#/parameters/limitParam' 
        - $ref: '#/parameters/transactionTypeParam'
        - $ref: '#/parameters/targetMsisdnParam'
      responses:
        200:
          description: > 
            Ok.
          schema:
            $ref: '#/definitions/queryTransactionsResponseBody'
        403:
          description: >
            Forbidden. Usually because of an invalid request. 
            Check `error.message` for details
          schema:
            $ref: '#/definitions/errorBody'
        404:
          description: > 
            means either
            the specified `msisdn` does not exist in the country
            no transactions are available on the provided range
          schema:
            $ref: '#/definitions/errorBody'

    

#################
# DEFINITION ZONE
#################
parameters:
  startDateParam:
    name: startDate
    in: query
    description: |
      start date for querying the transactions. ISO-8601 date only
    required: true
    type: string
    default: today
    x-example: 2016-08-22
  
  endDateParam:
    name: endDate
    in: query
    description: |
      end date for querying the transactions. ISO-8601 date only
    required: true
    type: string
    default: today
    x-example: "2016-08-22"
  
  limitParam:
    name: limit
    in: query
    description: > 
      maximum number of transactions to return. 0 means no limit
      if not specified, it defaults to 10
    type: number
    format: int32
    minimum: 0
    default: 10
    x-example: 20
  
  transactionTypeParam:
    name: transactionType
    in: query
    description: >
      desired type of transaction for que query
    type: string
    x-example: TOPUP

  targetMsisdnParam:        
    name: targetMsisdn
    in: query
    description: |
      destination of the transfer transaction. irrelevant for topup
      transactions. includes international code
    type: string
    x-example: 595983987654
  
  msisdnPathParameter:
    name: msisdn
    in: path
    type: string
    required: true
    description: > 
      msisdn number of the agent
    x-example: 59598514632

definitions:
  errorBody:
    type: object
    properties:
      error:
        type: object
        properties: 
          statusCode:
            type: integer
            format: int32
            description: > 
              duplicates the HTTP Status returned by the server. OPTIONAL
          message:
            type: string
            description: > 
              user friendly description of what went wrong.
          code:
            type: string
            description: > 
              internal development error code. useful to 
              identify the error when reporting to API owner.
          developerMessage:
            type: string
            description: > 
              developer oriented fine grained description of the server 
              condition preventing the action to be completed.
          errorURL: 
            type: string
            description: > 
              URL pointing to a common developer friendly site that will 
              provide more information about the situation. OPTIONAL
        required:
              - message
              - code
              - developerMessage
    required:
      - error
    example:
      error:
        statusCode: 404
        code: ABC-123
        message: > 
          customer facing message. developer can decide to show or not
          this to the end consumer.
        developerMessage: >
          description of the internal error in the backend. 
          intended for developers. might contain technical 
          details to identify the issue
        errorURL: reserved for future use


  conditionsObject:
    type: object
    description: > 
      specify one or more conditions that were not met thus the 
      403 response is sent to the invoker

    properties:
      conditionCode:
        type: string
        description: > 
          unique internal code for the failed condition. this CAN
          be used by the UI layer to map the message to something
          more adequate for presentation.
      conditionMessage:
        type: string
        description: > 
          developer oriented message indicating the failed condition
          and causes.
      message:
        type: string
        description: > 
          backend UI friendly message to show to end consumer. CAN be
          replaced with the invoker by creating a map internally with
          the `conditionCode` as the attribute



  errorBodyActivateUberPOSAgent:
    type: object
    properties:
      error:
        type: object
        properties: 
          statusCode:
            type: integer
            format: int32
            description: >
              duplicates the HTTP Status returned by the server. OPTIONAL
          message:
            type: string
            description: > 
              user friendly description of what went wrong.
          code:
            type: string
            description: > 
              internal development error code. useful to 
              identify the error when reporting to API owner.
          developerMessage:
            type: string
            description: > 
              developer oriented fine grained description of the server 
              condition preventing the action to be completed.
          errorURL: 
            type: string
            description: > 
              URL pointing to a common developer friendly site that will 
              provide more information about the situation. OPTIONAL
          failedConditions:
            type: array
            items:
              $ref: '#/definitions/conditionsObject'
                
        required:
              - message
              - code
              - developerMessage
              - failedConditions
    required:
      - error
    example:
      error:
        statusCode: 403
        code: ABC-123
        message: > 
          one or more conditions failed activating the agent
        developerMessage: >
          preconditions unmet to activate agent
        errorURL: reserved for future use
        failedConditions: [
          {
            conditionCode: INSUFFICIENT_BALANCE,
            conditionMessage: insufficient balance,
            message: you must recharge your wallet to pay the initial fee to be
              activated as an agent
          },
          {
            conditionCode: ADDRESS_NOT_DECLARED,
            conditionMessage: physical address required,
            message: you must declare and validate an address
          }
        ]

  addUberPOSAgentResponseBody:
    type: object
    properties:
      msisdn:
        type: string
        description: msisdn of the new agent
      canOperate: 
        type: boolean
        description: > 
          indicates if the agent can or not operate 
          after being created
      userLevel:
        type: number
        description: >
          level assigned to the new agent upon creation.
          this level establishes limits and attributions
          according to country rules.
    example:
        msisdn: 595983723324
        canOperate: false
        userLevel: 1
  
  addUberPOSAgentRequestBody:
    type: object
    properties:
      msisdn: 
        type: string
        description: msisdn of the new agent
      documentId:
        type: string
        description: document id of the new agent
      documentIdType:
        type: string
        description: > 
          type of  document id. each country provides the
          enumerated values
      name:
        type: string
        description: name of the agent
      lastName:
        type: string
        description: last name of the agent
      dob:
        type: string
        format: date
        description: date of birth of the agent. ISO-8601 date
      email:
        type: string
        description: email address of the new agent
    required:
      - msisdn
      - documentId
      - documentIdType
      - name
      - lastName
      - dob
      - email
    example:
        msisdn: 595983723324
        documentId: 123456789
        documentIdType: DUI
        name: Courage
        lastName: The Cowardly Dog
        dob: 2000-03-22
        email: courage@nowhere.com
      
  getUberPOSAgentResponseBody:
    type: object
    properties:
      msisdn: 
        type: string
        description: msisdn of the agent
      documentId:
        type: string
        description: document id of the agent
      documentIdType:
        type: string
        description: > 
          type of  document id. each country provides the
          enumerated values
      name:
        type: string
        description: name of the agent
      lastName:
        type: string
        description: last name of the agent
      dob:
        type: string
        format: date
        description: date of birth of the agent. ISO-8601 date
      email:
        type: string
        description: email address of the new agent
      canOperate: 
        type: boolean
        description: > 
          indicates if the agent can or not operate 
          after being created
      userLevel:
        type: number
        description: >
          level assigned to the new agent upon creation.
          this level establishes limits and attributions
          according to country rules.
    required:
      - msisdn
      - documentId
      - documentIdType
      - name
      - lastName
      - dob
      - email
      - canOperate
      - userLevel
    example:
        msisdn: 595983723324
        documentId: 123456789
        documentIdType: DUI
        name: Courage
        lastName: The Cowardly Dog
        dob: 2000-03-22
        email: courage@nowhere.com
        canOperate: true
        userLevel: 2

  locationObject:
    type : object
    description: defines the location of the agent
    properties:
      longitude: 
        type: number
        format: double
        description: longitude
      latitude:
        type: number
        format: double
        description: latitude
    required:
      - latitude
      - longitude
  
  transferMoneyRequestBody:
    type: object
    properties:
      targetMsisdn:
        type: string
        description: msisdn of the purchaser
      targetCarrier:
        type: string
        description: target carrier for the transaction.
        enum:
          - TIGO
      sourceCarrier:
        type: string
        description: carrier of the UberPOS Agent.
        enum:
          - TIGO
      amount:
        type: number
        format: float
        description: amount to be transferred
      currency:
        type: string
        description: currency of the transferred amount. ISO-4217
        enum:
          - BOB
      transactionId:
        type: string
        description: > 
          invoker unique transaction id for correlation purposes
      agentLocation:
          $ref: '#/definitions/locationObject'          
      requestMethod:
        type: string
        description: >
          method used for requesting the transaction 
          (another app, buyer directly, etc.)        
    required:
      - sourceCarrier
      - targetMsisdn
      - targetCarrier
      - amount
      - currency
      - transactionId
    example:
      targetMsisdn: 595981123456
      sourceCarrier: TIGO
      targetCarrier: TIGO
      amount: 12.50
      currency: BOB
      transactionId: 14dd3ce9-b5ed-4469-ab08-f2839e7d8c31
      agentLocation:
        longitude: -61.699219
        latitude: -18.646245
      requestMethod: Tigo Shop App

  transferMoneyResponseBody:
    type: object
    properties:
      transactionId:
        type: string
        description: >
          Tigo unique transaction id for correlation purposes
      paidCommissionPercentage: 
        type: number
        format: double
        description: > 
          percentage of comission paid
      paidCommissionAmount:
        type: number
        format: double
        description: >
          amount of commision paid
      currency:
        type: string
        description: currency of the paid commission. ISO-4217
        enum:
          - BOB
    required:
      - transactionId
      - paidCommissionPercentage
      - paidCommissionAmount
      - currency
    example:
      transactionId: 57afb4e4-4825-46f0-9d2a-442c58bf4bd6
      paidCommissionPercentage: 0.3
      paidCommissionAmount: 1500
      currency: BOB
      

  transactionObject:
    type: object
    description: >
      definition of a transaction made by the agent
    properties:
      internalTransactionId:
        type: string
        description: >
          Tigo unique transation id for correlation purposes
      externalTransactionId:
        type: string
        description: >
          invoker unique transaction id for correlation purposes
      transactionType:
        type: string
        description: >
          type of transaction
        enum:
          - TOPUP
          - TRANSFER
      currency:
        type: string
        description: currency of the transaction. ISO-4217
        enum:
          - BOB
      amount:
        type: number
        format: float
        description: amount of the transaction
      paidCommissionPercentage: 
        type: number
        format: double
        description: > 
          percentage of comission paid
      paidCommissionAmount:
        type: number
        format: double
        description: >
          amount of commision paid
      transactionTimestamp:
        type: string
        format: datetime
        description: >
          datetime of the transaction. ISO-8601
      targetNumber:
        type: string
        description: destination of 
    required:
      - internalTransactionId
      - externalTransactionId
      - transactionType
      - currency
      - amount
      - paidCommissionPercentage
      - paidCommissionAmount
      - transactionTimestamp
  queryTransactionsResponseBody:
    type: array
    items: 
      $ref: '#/definitions/transactionObject'
    example:
      [
        {
          internalTransactionId: 07269645-d007-446f-8f70-1c5cd5a3057b,
          externalTransactionId: 484ac4ef-a7c3-440b-9ce4-9e1a7b7d1002,
          transactionType: TOPUP,
          currency: BOB,
          amount: 2700,
          paidCommissionPercentage: 0,
          paidCommissionAmount: 0,
          transactionTimestamp: "2016-10-07T20:52:03Z"
        },
        {
          internalTransactionId: c30e1a37-7c22-4feb-809a-0a1bf26ed885,
          externalTransactionId: 5f025f4f-787b-44b2-a85f-6ec1d2de2597,
          transactionType: TRANSFER,
          currency: BOB,
          amount: 1350,
          paidCommissionPercentage: 2,
          paidCommissionAmount: 227,
          transactionTimestamp: "2016-10-05T06:34:29Z",
          targetMsisdn: 595982321654
        } 
      ]
      
      
  agentWalletInstance:
    type: object
    properties:
      walletId:
        type: string
        description: id of the wallet
      balance:
        type: number
        format: double
        description: balance on the wallet
      currency:
        type: string
        description: currency of the wallet. `ISO-4217`
        enum:
          - BOB
    required:
      - walletId
      - balance
      - currency
  
  agentWalletCollection:
    type: object
    properties:
      msisdn:
        type: string
        description: msisdn of the wallet owner
      wallets:
        type: array
        items:
          $ref: '#/definitions/agentWalletInstance'
        
  getAgentWalletsResponseBody:
    $ref: '#/definitions/agentWalletCollection'
    example:
      {
        msisdn: 595985654654,
        wallets: [
          {
            walletId: 1,
            balance: 1500,
            currency: BOB
          },
          {
            walletId: 2,
            balance: 0,
            currency: BOB
          }
        ]
      }
      
  msisdnInstancePart:
    type: object
    properties:
      msisdn:
        type: string
        description: msisdn of the agent
    required:
      - msisdn

  queryAgentsWalletsGroupRequestBody:
    type: array
    description: |
      array of `msisdn` (including international prefix) of the agents
      to query their wallets
    items:
      $ref: '#/definitions/msisdnInstancePart'
    example:
      [
        {
          "msisdn": "595982159951"
        },
        {
          "msisdn": "595982357753"
        }
      ]

  queryAgentsWalletsGroupResponseBody:
    type: array
    items:
      $ref: '#/definitions/agentWalletCollection'
    example:
      [
        {
          msisdn: 595982159951,
          wallets: [
            {
              walletId: 1,
              balance: 1500,
              currency: BOB
            },
            {
              walletId: 2,
              balance: 0,
              currency: BOB
            }
          ]
        },
        {
          msisdn: 595982357753,
          wallets: [
            {
              walletId: 1,
              balance: 0,
              currency: BOB
            }
          ]
        }
      ]