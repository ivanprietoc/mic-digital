swagger: "2.0"
info:
  version: 1.0.0
  title: Mobile Money API - Accounts
  description: |
    Millicom version of GSMA Harmonized Mobile Money API for handling Accounts.<br>
    The Accounts APIs are used to view properties associated with an account resource. Types of account include mobile wallets, financial institution accounts and utility accounts (e.g. for electricity).
    Two methods are provided for identifying an account – *the multiple identifiers method* and *the MSISDN identifier method.
    
    **Multiple Identifiers Method :** There is no single industry-accepted method of uniquely identifying an account. There are numerous methods of identifying an account and the list of permitted identifiers can be found in the Account Identifiers section. Every Account API identifies the target account through the URI. As there can be multiple identifiers required to identify the target account, the URI uses a ‘$’ delimiter to separate each identifier. 
    The format can be expressed as:
    
    `/accounts/{accountIdentifier1}@{value1}${accountIdentifier2}@{value2}${accountIdentifier3}@{value3}`
    
    Possible accountIdentifiers are:
    - MSISDN
    - Users ID number depending on the country this could be:
          `DUI` for El Salvador
          `DPI` for Guatemala
          `TDI` for Honduras
          `CI` for Paraguay and Bolivia
    - MFS Platform unique user ID
    
    **MSISDN Identifier Method :** In the scenario where MSISDN is the only identifier needed to uniquely identify an account, an alternate short URI is available:
    `/accounts/msisdn/{value}`
    
    See [https://mmapi.gsma.com/accounts/]

  termsOfService: https://mmapi.gsma.com/
  contact:
    name: Andres Cavallin
    email: andres.cavallin@millicom.com
    url: https://mmapi.gsma.com/
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: sandbox.api.tigo.com
basePath: /v1/tigo/mfs/{country}/core
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
  
####...######...####...##..##..#####...######..######..##..##.
#......##......##..##..##..##..##..##....##......##.....####..
####...####....##......##..##..#####.....##......##......##...
   ##..##......##..##..##..##..##..##....##......##......##...
####...######...####....####...##..##..######....##......##...

securityDefinitions:
  applicationLevel_auth:
    description: |
      This API Key is a secret known only to the API Client and the API Gateway server. Never store in an App. API Key secret is used instead of oauth2 grant type "client credentials" to avoid conflict with user level security which uses oauthv2 (Open ID Connect)
    type: apiKey
    name: api_key
    in: header
  userLevel_auth:
    description: |
      Any party in possession of a bearer token (a "bearer") can use it to get access to the associated resources (without demonstrating possession of a cryptographic key). To prevent misuse, bearer tokens need to be protected from disclosure in storage and in transport.
      This token is going to be passed to the Mobile Money Backend who supports it. 
      If not supported, this token can be used to retrieve proper credentials to be presented to the backend (MFS ID)
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://mic-test.apigee.net/oauth/v2/authorize?response_type=code{&redirect_uri,client_id,scope,state,nonce,prompt,display,login_hint}'
    tokenUrl: 'https://myapp.tigo.com/tigoid/callback'
    scopes:
      openid: Used to identify this API is compliant with the OpenID Connect 1.0 specification
      profile: May be useful for self registering the user. Includs name, birthday, photo on Tigo ID, not the KWY
      email: Email address of the user used to register on Tigo ID, not the KYC
      phone: The MSISDN. Also the account identifier on the Mobile Money Platform
      write:transactions: Create or update transactions that affect the balance
      read:transactions: Query existing transactions that affected the wallet
      write:accounts: Modify information about the account like name or PIN
      read:accounts: Read information about the account like balance or address
      read:companioncard: Elevated privileges to see the full Companion Card Info. Must expire in a short period.
      write:companioncard: Elevated privileges to associate a Companion card to the account. Requires two factor authentication.
      merchantpayment: Grant permission to a third party merchant to charge (debit) the account. One time use.      
  legacyUserLevel_auth:
    description: |
      If basic credentials are present, token based authentication is ommited. 
      Use only as a fallback method when there is no support for Open ID Connect at the Mobile Money Platform nor MFS ID deployment.
      Best practice is for PIN to be encrypted and salted at the source using a pre-shared key and symmetric algorithm obtained during provisioning of the API Client.
      The API Client (App Server) can then pass this decrypted credentials to the API Gateway.
    type: basic

#####....####...######..##..##...####..
##..##..##..##....##....##..##..##.....
#####...######....##....######...####..
##......##..##....##....##..##......##.
##......##..##....##....##..##...####..

paths:
  '/accounts/{accountId}':
    x-summary: Account management
    x-description: View, Create, Update Tigo Money account
    post: 
      summary: 'Create Account'
      description: 'Create a new account linked to the ACCOUNT identifier and with the provided KYC information. If the account already exists, this call will fail.'
      consumes:
        - application/json      
      parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
      - name: kyc
        in: body
        required: true
        schema:
          $ref: '#/definitions/kyc'
      responses: 
        200: 
          $ref: '#/responses/responseKyc'
        400: 
          $ref: '#/responses/error'
        401: 
          $ref: '#/responses/error'
        404: 
          $ref: '#/responses/error'
        500: 
          $ref: '#/responses/error'
        503: 
          $ref: '#/responses/error'
    get: 
      summary: 'View Account KYC'
      description: 'View KYC information linked to the provided ACCOUNT identifier.'
      consumes:
        - application/json      
      parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
      responses: 
        200: 
          $ref: '#/responses/responseKyc'
        400: 
          $ref: '#/responses/error'
        401: 
          $ref: '#/responses/error'
        404: 
          $ref: '#/responses/error'
        500: 
          $ref: '#/responses/error'
        503: 
          $ref: '#/responses/error'
    put: 
      summary: 'Update Account KYC'
      description: 'Update KYC information for an existing account linked to the provided ACCOUNT identifier. If the account does not exists, this call will fail.'
      consumes:
        - application/json      
      parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
      - name: kyc
        in: body
        required: true
        schema:
          $ref: '#/definitions/kyc'
      responses: 
        200: 
          $ref: '#/responses/responseKyc'
        400: 
          $ref: '#/responses/error'
        401: 
          $ref: '#/responses/error'
        404: 
          $ref: '#/responses/error'
        500: 
          $ref: '#/responses/error'
        503: 
          $ref: '#/responses/error'          
#AECA changed accountname to /kyc/accountname          
  #'/accounts/msisdn/{msisdn}/kyc/accountname':
  '/accounts/{accountId}/kyc/accountname':
    x-summary: Account Name
    x-description: View Tigo Money account name
    get: 
     summary: 'View Account Name'
     description: 'This endpoint returns the name of an account (via ACCOUNT identifier)'
     parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
     responses: 
      200: 
        $ref: '#/responses/accountName'
      400: 
        $ref: '#/responses/error'
      401: 
        $ref: '#/responses/error'
      404: 
        $ref: '#/responses/error'
      500: 
        $ref: '#/responses/error'
      503: 
        $ref: '#/responses/error'          
  '/accounts/{accountId}/status':
    x-summary: Account Status
    x-description: View Tigo Money account status
    get: 
      summary: 'View Account Status'
      description: 'This endpoint returns the current status of an account (via ACCOUNT identifier)'
      parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
      responses: 
        200: 
          $ref: '#/responses/accountStatus'
        400: 
          $ref: '#/responses/error'
        401: 
          $ref: '#/responses/error'
        404: 
          $ref: '#/responses/error'
        500: 
          $ref: '#/responses/error'
        503: 
          $ref: '#/responses/error'
  '/accounts/{accountId}/balance':
    x-summary: Account Balance
    x-description: View Tigo Money account balance
    get: 
     summary: 'View Account Balance'
     description: 'This endpoint returns the balance of an account (via ACCOUNT identifier)'
     parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
     responses: 
      200: 
        $ref: '#/responses/accountBalance'
      400: 
        $ref: '#/responses/error'
      401: 
        $ref: '#/responses/error'
      404: 
        $ref: '#/responses/error'
      500: 
        $ref: '#/responses/error'
      503: 
        $ref: '#/responses/error'
  '/accounts/{accountId}/transactions':
    x-summary: Account Transactions
    x-description: View Tigo Money account transactions
    get: 
     summary: 'View Account Specific Transactions'
     description: 'This endpoint returns transactions linked to a specific account (via ACCOUNT identifier). Filters include date and transaction type. Supports pagination.'
     parameters: 
      - $ref: '#/parameters/date'
      - $ref: '#/parameters/accountId'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/fromDateTime'
      - $ref: '#/parameters/toDateTime'
      #Added by AECA
      - $ref: '#/parameters/typeArray'
      - $ref: '#/parameters/transactionStatus'
     responses: 
      200: 
        $ref: '#/responses/listTransaction'
      400: 
        $ref: '#/responses/error'
      401: 
        $ref: '#/responses/error'
      404: 
        $ref: '#/responses/error'
      500: 
        $ref: '#/responses/error'
      503: 
        $ref: '#/responses/error'

#####...######..######..######..##..##..######..######..######...####...##..##...####..
##..##..##......##........##....###.##....##......##......##....##..##..###.##..##.....
##..##..####....####......##....##.###....##......##......##....##..##..##.###...####..
##..##..##......##........##....##..##....##......##......##....##..##..##..##......##.
#####...######..##......######..##..##..######....##....######...####...##..##...####..

definitions:
  baseTransaction:
    type: object
    required:
      - amount
      - currency
      - type
      - requestDate
      - debitParty
      - creditParty
    properties:
      amount:
        type: number
        format: double
        description: Principle Transaction Amount.
        minimum: 0
        exclusiveMinimum: true
      currency:
        description: Currency of the principal transaction amount.
        $ref: '#/definitions/currenciesEnum'
      type:
        description: The harmonised Transaction Type
        $ref: '#/definitions/transactionTypeEnum'
      subType:
        type: string
        description: A non-harmonised sub-classification of the type of transaction. Values are not fixed and usage will vary according to Provider.
        minLength: 0
        maxLength: 256
      descriptionText:
        type: string
        description: Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on the SMS and on the account statement.
        minLength: 0
        maxLength: 160
      requestDate:
        type: string
        description: The creation date and time of the transaction as supplied by the client.
        format: date-time
      oneTimeCode:
        type: string
        description: A one-time code that can be supplied in the request or can be generated in the response depending upon the use case.
        minLength: 0
        maxLength: 256
      geoCode:
        type: string
        pattern: "^(-?(90|(\\\\d|[1-8]\\\\d)(\\\\.\\\\d{1,6}){0,1}))\\\\,{1}(-?(180|(\\\\d|\\\\d\\\\d|1[0-7]\\\\d)(\\\\.\\\\d{1,6}){0,1}))$"
        description: Indicates the geographic location from where the transaction was initiated.
        minLength: 0
        maxLength: 256
      debitParty:
        type: array
        description: A collection of key/value pairs that enable the debit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 1
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      creditParty:
        type: array
        description: A series of key/value pairs that enable the credit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 1
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      senderKyc:
        description: 'A collection of properties detailing the KYC of the transaction Sender, typically used for International Transfers.'
        $ref: '#/definitions/kyc'
      recipientKyc:
        description: 'A collection of properties detailed the KYC of the transaction Recipient, typically used for International Transfers.'
        $ref: '#/definitions/kyc'
      originalTransactionReference:
        type: string
        description: 'For reversals and refunds, this property indicates the transaction which is the subject of the reversal.'
        minLength: 0
        maxLength: 256
      servicingIdentity:
        type: string
        description: 'The property is used to identify the servicing identity for ?present? transactions, e.g. till, POS ID, assistant ID'
        minLength: 0
        maxLength: 256
      metadata:
        type: array
        description: A collection of key/value pairs. These can be used to populate additional transaction properties.
        maxItems: 20
        items:
          $ref: '#/definitions/metadata'
  requestTransaction:
    allOf:
      - $ref: '#/definitions/baseTransaction'
      - type: object
        properties:
          transactionStatus:
            type: string
            description: Indicates the status of the transaction as stored by the API provider.
            minLength: 0
            maxLength: 256
          internationalTransferInformation:
            $ref: '#/definitions/internationalTransfer'
  responseTransaction:
    allOf:
      - $ref: '#/definitions/baseTransaction'
      - type: object
        required:
          - transactionStatus
          - transactionReference
        properties:
          transactionStatus:
            type: string
            description: Indicates the status of the transaction as stored by the API provider.
            minLength: 1
            maxLength: 256
          creationDate:
            type: string
            format: date-time
            description: Date and time when the transaction was created by the API Provider.
          modificationDate:
            type: string
            format: date-time
            description: Date and time when the transaction was modified by the API Provider.
          transactionReference:
            type: string
            description: Unique reference for the transaction. This is returned in the response by API provider.
            minLength: 1
            maxLength: 256
          transactionReceipt:
            type: string
            description: Transaction receipt number as notified to the parties. This may differ from the Transaction Reference.
            minLength: 0
            maxLength: 256
          internationalTransferInformation:
            description: A collection of properties detailed information specifically used for international transfers.
            $ref: '#/definitions/internationalTransferResponse'
  internationalTransfer:
    type: object
    required:
      - originCountry
    properties:
      originCountry:
        description: 'The originating country of the transaction, i.e. the country where the transaction commenced.'
        $ref: '#/definitions/countriesEnum'
      quotationReference:
        description: Reference for the quotation that was provider to the sender.
        type: string
        minLength: 0
        maxLength: 256
      quoteId:
        type: string
        description: The specific quote associated with the quotation.
        minLength: 0
        maxLength: 256
      receivingCountry:
        description: Destination Country of international remittance.
        $ref: '#/definitions/countriesEnum'
      remittancePurpose:
        type: string
        description: Property providing a description of the reason for the international remittance.
        minLength: 0
        maxLength: 256
      relationshipSender:
        type: string
        description: Indicates the relationship (if any) between the sender and the receiver.
        minLength: 0
        maxLength: 256
      deliveryMethod:
        description: The recipient delivery method as chosen by the sender.
        $ref: '#/definitions/deliveryMethodEnum'
  internationalTransferResponse:
    allOf:
      - $ref: '#/definitions/internationalTransfer'
      - type: object
        properties:
          senderBlockingReason:
            type: string
            description: 'The reason for blocking the transaction, based on AML checks on the sender.'
            minLength: 0
            maxLength: 256
          recipientBlockingReason:
            type: string
            description: 'The reason for blocking the transaction, based on AML checks on the recipient.'
            minLength: 0
            maxLength: 256
  baseReversal:
    type: object
    required:
      - type
      - requestDate
    properties:
      amount:
        type: number
        format: double
        description: Principle Transaction Amount.
        minimum: 0
        exclusiveMinimum: true
      currency:
        description: Currency of the principal transaction amount.
        $ref: '#/definitions/currenciesEnum'
      type:
        description: The harmonised Transaction Type
        $ref: '#/definitions/transactionTypeEnum'
      subType:
        type: string
        description: A non-harmonised sub-classification of the type of transaction. Values are not fixed and usage will vary according to Provider.
        minLength: 0
        maxLength: 256
      descriptionText:
        type: string
        description: Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on the SMS and on the account statement.
        minLength: 0
        maxLength: 160
      requestDate:
        type: string
        description: The creation date and time of the transaction as supplied by the client.
        format: date-time
      geoCode:
        type: string
        pattern: "^(-?(90|(\\\\d|[1-8]\\\\d)(\\\\.\\\\d{1,6}){0,1}))\\\\,{1}(-?(180|(\\\\d|\\\\d\\\\d|1[0-7]\\\\d)(\\\\.\\\\d{1,6}){0,1}))$"
        description: Indicates the geographic location from where the transaction was initiated.
        minLength: 0
        maxLength: 256
      debitParty:
        type: array
        description: A collection of key/value pairs that enable the debit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 0
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      creditParty:
        type: array
        description: A series of key/value pairs that enable the credit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 0
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      servicingIdentity:
        type: string
        description: 'The property is used to identify the servicing identity for ?present? transactions, e.g. till, POS ID, assistant ID'
        minLength: 0
        maxLength: 256
      metadata:
        type: array
        description: A collection of key/value pairs. These can be used to populate additional transaction properties.
        maxItems: 20
        items:
          $ref: '#/definitions/metadata'
  requestReversal:
    allOf:
      - $ref: '#/definitions/baseReversal'
      - type: object
        properties:
          transactionStatus:
            type: string
            description: Indicates the status of the transaction as stored by the API provider.
            minLength: 0
            maxLength: 256
  responseReversal:
    allOf:
      - $ref: '#/definitions/baseReversal'
      - type: object
        required:
          - transactionStatus
          - transactionReference
          - originalTransactionReference
        properties:
          transactionStatus:
            type: string
            description: Indicates the status of the transaction as stored by the API provider.
            minLength: 1
            maxLength: 256
          creationDate:
            type: string
            format: date-time
            description: Date and time when the transaction was created by the API Provider.
          modificationDate:
            type: string
            format: date-time
            description: Date and time when the transaction was modified by the API Provider.
          transactionReference:
            type: string
            description: Unique reference for the transaction. This is returned in the response by API provider.
            minLength: 1
            maxLength: 256
          transactionReceipt:
            type: string
            description: Transaction receipt number as notified to the parties. This may differ from the Transaction Reference.
            minLength: 0
            maxLength: 256
          originalTransactionReference:
            type: string
            description: 'For reversals and refunds, this property indicates the transaction which is the subject of the reversal.'
            minLength: 0
            maxLength: 256
  accountStatus:
    type: object
    required:
      - status
    properties:
      status:
        description: Indicates a simplified representation of the account state. This will be shown as ?Available? or ?Unavailable?. A state of ?Unavailable? means that the account is in a state that does not allow posting of transactions. Unregistered indicates that although not available a transaction created with the account identifier(s) will result an unregistered voucher creation.
        $ref: '#/definitions/accountStatusEnum'
      subStatus:
        type: string
        description: Property can be used to return a provider-specific status for the account.
        minLength: 0
        maxLength: 256
  accountBalance:
    type: object
    properties:
      currentBalance:
        type: number
        format: double
        description: Current outstanding balance on the account.
        minimum: 0
        exclusiveMinimum: false
      availableBalance:
        type: number
        format: double
        description: Indicates the balance that is able to be debited for an account. This balance is only provided on some API provider systems.
        minimum: 0
        exclusiveMinimum: false
      reservedBalance:
        type: number
        format: double
        description: 'Indicates the portion of the balance that is reserved, i.e. intended to be debited. This balance is only provided on some API provider systems.'
        minimum: 0
        exclusiveMinimum: false
      unclearedBalance:
        type: number
        format: double
        description: 'Indicates the sum of uncleared funds in an account, i.e. those that are awaiting a credit confirmation.'
        minimum: 0
        exclusiveMinimum: false
      currency:
        description: Currency for all returned balances.
        $ref: '#/definitions/currenciesEnum'
      status:
        description: Indicates a simplified representation of the account state. This will be shown as ?Available? or ?Unavailable?. A state of ?Unavailable? means that the account is in a state that does not allow posting of transactions. Unregistered indicates that although not available a transaction created with the account identifier(s) will result an unregistered voucher creation.
        $ref: '#/definitions/accountStatusEnum'
  accountName:
    type: object
    required:
      - status
    properties:
      name:
        description: A collection of properties detailing the name of the Primary Account Holder.
        $ref: '#/definitions/name'
      status:
        description: Indicates a simplified representation of the account state. This will be shown as ?Available? or ?Unavailable?. A state of ?Unavailable? means that the account is in a state that does not allow posting of transactions. Unregistered indicates that although not available a transaction created with the account identifier(s) will result an unregistered voucher creation.
        $ref: '#/definitions/accountStatusEnum'
  statementEntry:
    type: object
    required:
      - amount
      - currency
      - transactionReference
      - debitParty
      - creditParty
      - transactionStatus
    properties:
      amount:
        type: number
        format: double
        description: Requested transaction amount.
        minimum: 0
        exclusiveMinimum: true
      currency:
        description: Currency of the requested transaction amount.
        $ref: '#/definitions/currenciesEnum'
      displayType:
        type: string
        description: The transaction type that is to be used for presentation to the account holder as determined by the API provider. This is not necessarily the actual transaction type.
        minLength: 0
        maxLength: 256
      transactionStatus:
        type: string
        description: Indicates the status of the transaction as represented by the API provider.
        minLength: 1
        maxLength: 256
      descriptionText:
        type: string
        description: Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on the SMS and on the account statement.
        minLength: 0
        maxLength: 160
      requestDate:
        type: string
        format: datetime
        description: The creation date and time of the transaction as supplied by the client.
      creationDate:
        type: string
        format: datetime
        description: Date and time when the transaction was created by the API Provider.
      modificationDate:
        type: string
        format: datetime
        description: Date and time when the transaction modified by the API Provider.
      transactionReference:
        type: string
        minLength: 1
        maxLength: 256
        description: 'Unique reference for the transaction. This is returned in the response by API provider. Note that for GET and PATCH requests, the Transaction Reference for the subject can be provided in the URI.'
      transactionReceipt:
        type: string
        minLength: 0
        maxLength: 256
        description: Transaction receipt number as notified to the parties. This may differ from the Transaction Reference.
      debitParty:
        type: array
        description: A collection of key/value pairs that enable the debit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 1
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      creditParty:
        type: array
        description: A series of key/value pairs that enable the credit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 1
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
  bill:
    type: object
    properties:
      currency:
        description: Currency of the bill to be paid.
        $ref: '#/definitions/currenciesEnum'
      amountDue:
        type: number
        format: double
        description: Amount outstanding on the bill to be paid.
        minimum: 0
        exclusiveMinimum: false
      dueDate:
        type: string
        format: date
        description: Date on which the Bill is due to be paid.
      billReference:
        type: string
        description: Reference number for the Bill that this payer can use when he/she wishes to pay.
        minLength: 0
        maxLength: 256
      minimumAmountDue:
        type: number
        format: double
        description: The minimum amount that is outstanding on the bill to be paid.
        minimum: 0
        exclusiveMinimum: false
  baseDebitMandate:
    type: object
    required:
      - startDate
      - requestDate
    properties:
      currency:
        description: Currency of the principal transaction amount.
        $ref: '#/definitions/currenciesEnum'
      amountLimit:
        type: number
        format: double
        description: The maximum amount that can be taken by the Payee on a payment request.
        minimum: 0
        exclusiveMinimum: false
      startDate:
        type: string
        format: date
        description: Date on which the first payment is to be taken.
      endDate:
        type: string
        format: date
        description: Date on which the final payment is to be taken.
      numberOfPayments:
        type: number
        format: int32
        description: Indicates the number of consecutive payments that are to be taken.
        minimum: 0
        exclusiveMinimum: false
      frequencyType:
        description: Indicates the frequency for which payments will be taken from the payers account.
        $ref: '#/definitions/frequencyTypeEnum'
      mandateStatus:
        description: Indicates the status of the Mandate as held in the API Provider system.
        $ref: '#/definitions/mandateStatusEnum'
      requestDate:
        type: string
        format: datetime
        description: The request date and time of the transaction as supplied by the client.
  requestDebitMandate:
    allOf:
      - $ref: '#/definitions/baseDebitMandate'
      - type: object
        properties:
          mandateReference:
            type: string
            description: Unique reference provided by the API Provider for the mandate.
            minLength: 0
            maxLength: 256
  responseDebitMandate:
    allOf:
      - $ref: '#/definitions/baseDebitMandate'
      - type: object
        required:
          - mandateReference
        properties:
          mandateReference:
            type: string
            description: Unique reference provided by the API Provider for the mandate.
            minLength: 1
            maxLength: 256
          creationDate:
            type: string
            format: datetime
            description: Date and time when the debit mandate was created by the API Provider.
          modificationDate:
            type: string
            format: datetime
            description: Date and time when the debit mandate was modified by the API Provider.
  link:
    type: object
    required:
      - status
    properties:
      status:
        description: Indicates the status of the Link.
        $ref: '#/definitions/linkStatusEnum'
      mode:
        description: 'Indicates the mode of operation support for the Link. If not populated, then default value it ?Both?.'
        $ref: '#/definitions/linkModeEnum'
  responseLink:
    allOf:
      - $ref: '#/definitions/link'
      - type: object
        required:
          - linkReference
        properties:
          linkReference:
            type: string
            description: Indicates the Link reference. This enables a linked account to be uniquely identified.
            minLength: 1
            maxLength: 256
  baseQuotation:
    type: object
    required:
      - requestDate
      - creditParty
      - debitParty
      - requestAmount
      - requestCurrency
    properties:
      requestDate:
        type: string
        format: datetime
        description: The creation date and time of the transaction as supplied by the client.
      debitParty:
        type: array
        description: A collection of key/value pairs that enable the debit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 1
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      creditParty:
        type: array
        description: A series of key/value pairs that enable the credit party to be identified. Keys include MSISDN and Wallet Identifier.
        minItems: 1
        maxItems: 10
        items:
          $ref: '#/definitions/accountIdentifierBase'
      senderKyc:
        description: 'A collection of properties detailing the KYC of the transaction Sender, typically used for International Transfers.'
        $ref: '#/definitions/kyc'
      recipientKyc:
        description: 'A collection of properties detailed the KYC of the transaction Recipient, typically used for International Transfers.'
        $ref: '#/definitions/kyc'
      requestAmount:
        type: number
        format: double
        description: Requested quotation amount.
        minimum: 0
        exclusiveMinimum: true
      requestCurrency:
        description: Currency of the requested quotation amount.
        $ref: '#/definitions/currenciesEnum'
      chosenDeliveryMethod:
        description: The delivery method chosen by the sending end user as the specific delivery method to be used in the quotes received.
        $ref: '#/definitions/deliveryMethodEnum'
      quotes:
        type: array
        description: A collection of quotes. A quote can be received from a single receiving payment service provider or from multiple providers.
        minItems: 0
        maxItems: 10
        items:
          $ref: '#/definitions/quote'
      senderBlockingReason:
        type: string
        description: 'The reason for blocking the quotation, based on AML checks on the sender.'
        minLength: 0
        maxLength: 256
      recipientBlockingReason:
        type: string
        description: 'The reason for blocking the quotation, based on AML checks on the recipient.'
        minLength: 0
        maxLength: 256
      metadata:
        type: array
        description: A collection of key/value pairs. These can be used to populate additional quotation properties.
        maxItems: 10
        items:
          $ref: '#/definitions/metadata'
  requestQuotation:
    allOf:
      - $ref: '#/definitions/baseQuotation'
  responseQuotation:
    allOf:
      - $ref: '#/definitions/baseQuotation'
      - type: object
        required:
          - quotationReference
        properties:
          quotationReference:
            type: string
            description: Unique reference for the Quotation as provided by the API Provider.
            minLength: 1
            maxLength: 256
          quotationStatus:
            description: Indicates the creation state of the quotation.
            $ref: '#/definitions/quotationStatusEnum'
          creationDate:
            type: string
            format: datetime
            description: Date and time when the transaction was created by the API Provider.
          modificationDate:
            type: string
            format: datetime
            description: Date and time when the transaction was modified by the API Provider.
          availableDeliveryMethod:
            description: Delivery Methods that are possible for the intended recipient.
            $ref: '#/definitions/deliveryMethodEnum'
  requestState:
    type: object
    required:
      - serverCorrelationId
      - status
      - notificationMethod
    properties:
      serverCorrelationId:
        type: string
        description: A unique identifier issued by the provider to enable the client to identify the RequestState resource on subsequent polling requests.
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'
        minLength: 1
        maxLength: 256
      status:
        description: Indicates the status of the request.
        $ref: '#/definitions/requestStateStatusEnum'
      pendingReason:
        type: string
        description: A textual description that can be provided to describe the reason for a pending status.
        minLength: 0
        maxLength: 256
      notificationMethod:
        description: Indicates whether a callback will be issued or whether the client will need to poll.
        $ref: '#/definitions/notificationMethodEnum'
      objectReference:
        type: string
        description: 'Provides a reference to the subject resource, e.g. transaction reference.'
        minLength: 0
        maxLength: 256
      expiryTime:
        type: string
        format: datetime
        description: 'Indicate the time by which the provider will fail the request if completion criteria have not been met. For an example, a debit party failing to authorise within the allowed time period.'
      pollLimit:
        type: number
        format: int32
        description: Indicates the number of poll attempts for the given requeststate resource that will be allowed by the provider.
        minimum: 0
        exclusiveMinimum: true
      error:
        $ref: '#/definitions/error'
  kyc:
    type: object
#Required items added by AECA
    required:
      - subjectName
      - idDocument
      - dateOfBirth
      - postalAddress
    properties:
      nationality:
        description: Nationality of the KYC subject.
        $ref: '#/definitions/countriesEnum'
      dateOfBirth:
        type: string
        format: date
        description: Birth date of the KYC subject.
      occupation:
        type: string
        description: Occupation of the KYC subject.
        minLength: 0
        maxLength: 256
      employerName:
        type: string
        description: Employer Name of the KYC subject.
        minLength: 0
        maxLength: 256
      contactPhone:
        type: string
        description: Contact phone number (mobile or landline) of the KYC subject.
        minLength: 0
        maxLength: 256
      gender:
        description: Gender of the KYC Object.
        $ref: '#/definitions/genderEnum'
      idDocument:
        type: array
        description: An array of properties containing the forms of identification that are associated with the subject.
        minItems: 0
        maxItems: 10
        items:
          $ref: '#/definitions/idDocument'
      postalAddress:
        description: A collection of properties that details the postal address of the KYC subject.
        $ref: '#/definitions/address'
      subjectName:
        description: Refers to the name properties for the KYC subject.
        $ref: '#/definitions/name'
      emailAddress:
        type: string
        description: Email address of the KYC subject.
        minLength: 0
        maxLength: 256
      birthCountry:
        description: The country of birth of the KYC subject.
        $ref: '#/definitions/countriesEnum'
  name:
    type: object
    properties:
      title:
        type: string
        description: 'The given title of the KYC subject, e.g. Mr, Mrs, Dr.'
        minLength: 0
        maxLength: 256
      firstName:
        type: string
        description: First name (also referred to as given name) of the KYC subject.
        minLength: 0
        maxLength: 256
      middleName:
        type: string
        description: Middle Name of the KYC subject.
        minLength: 0
        maxLength: 256
      lastName:
        type: string
        description: Surname (also referred to as last or family name) of the KYC subject.
        minLength: 0
        maxLength: 256
      fullName:
        type: string
        description: The full name of the KYC subject.
        minLength: 0
        maxLength: 256
      nativeName:
        type: string
        description: The full name expressed as in the native language.
        minLength: 0
        maxLength: 256
  idDocument:
    type: object
    required:
      - idType
    properties:
      idType:
        description: 'Indicates the type of identification for the KYC subject, e.g. passport, driving licence etc.'
        $ref: '#/definitions/idTypeEnum'
      idNumber:
        type: string
        description: Reference pertaining to the type of identification for the KYC subject.
        minLength: 0
        maxLength: 256
      issueDate:
        type: string
        format: date
        description: Date of issue for the identification document.
      expiryDate:
        type: string
        format: date
        description: Date of expiry for the identification document.
      issuer:
        type: string
        minLength: 0
        maxLength: 256
        description: Indicates the organisation/government entity that issued the ID document.
      issuerPlace:
        type: string
        minLength: 0
        maxLength: 256
        description: Place of issue for the identification type.
      issuerCountry:
        description: Country where the identification type was issued.
        $ref: '#/definitions/countriesEnum'
      otherIdDescription:
        type: string
        description: 'Where an ID Type of ?OtherID? is specified, a description of the type of identification can be provided in this property.'
        minLength: 0
        maxLength: 256
  address:
    type: object
    required:
      - country
    properties:
      addressLine1:
        type: string
        description: First line of the address.
        minLength: 0
        maxLength: 256
      addressLine2:
        type: string
        description: Second line of the address.
        minLength: 0
        maxLength: 256
      addressLine3:
        type: string
        description: Third line of the address.
        minLength: 0
        maxLength: 256
      city:
        type: string
        description: City/Town
        minLength: 0
        maxLength: 256
      stateProvince:
        type: string
        description: State or Province
        minLength: 0
        maxLength: 256
      postalCode:
        type: string
        description: Postal Code
        minLength: 0
        maxLength: 256
      country:
        description: Country
        $ref: '#/definitions/countriesEnum'
  quote:
    type: object
    required:
      - quoteId
      - sendingAmount
      - sendingCurrency
      - receivingAmount
      - receivingCurrency
      - fxRate
    properties:
      quoteId:
        type: string
        description: The unique ID for this quote.
        minLength: 1
        maxLength: 256
      quoteExpiryTime:
        type: string
        description: The timestamp when the quote will expire.
        format: datetime
      receivingServiceProvider:
        type: string
        description: 'The name of the RSP, i.e. the provider that the quote is associated with.'
        minLength: 0
        maxLength: 256
      sendingAmount:
        type: number
        format: double
        description: Requested quotation amount as supplied by the sender.
        minimum: 0
        exclusiveMinimum: true
      sendingCurrency:
        description: Currency of the requested quotation amount.
        $ref: '#/definitions/currenciesEnum'
      receivingAmount:
        type: number
        format: double
        description: The total amount as it will be received by the receiving end user.
        minimum: 0
        exclusiveMinimum: true
      receivingCurrency:
        description: The currency of the quote.
        $ref: '#/definitions/currenciesEnum'
      fxRate:
        type: number
        format: double
        description: The conversion rate applicable between the sending and the receiving currency for the requested transaction.
        minimum: 0
        exclusiveMinimum: true
      deliveryMethod:
        description: The delivery method that is applicable to the quotation.
        $ref: '#/definitions/deliveryMethodEnum'
  metadata:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: Identifies the type of additional property.
        minLength: 1
        maxLength: 256
      value:
        type: string
        description: Identifies the value of the additional property.
        minLength: 1
        maxLength: 256
  error:
    type: object
    required:
      - errorCategory
      - errorCode
    properties:
      errorCategory:
        description: The category grouping for the error.
        $ref: '#/definitions/errorCategoryEnum'
      errorCode:
        description: The harmonised error code identifying the reason for error.
        $ref: '#/definitions/errorCodeEnum'
      errorDescription:
        type: string
        description: A textual Description of the error.
        minLength: 0
        maxLength: 256
      errorDateTime:
        type: string
        format: datetime
        description: The timestamp indicating when the error occurred.
      errorParameters:
        type: array
        description: Diagnostic information in the form of key/value pairs relating to the error.
        minItems: 0
        maxItems: 10
        items:
          $ref: '#/definitions/metadata'
  heartbeat:
    type: object
    required:
      - serviceStatus
    properties:
      serviceStatus:
        description: Provides the status of the requested service.
        $ref: '#/definitions/serviceStatusEnum'
      delay:
        type: number
        format: int64
        description: The anticipated processing delay in milliseconds.
  response:
    type: object
    required:
      - link
    properties:
      link:
        type: string
        description: Provides a URL to the resource associated with the given correlation ID.
        minLength: 1
        maxLength: 256
  patch:
    type: object
    required:
      - op
      - path
      - value
    properties:
      op:
        $ref: '#/definitions/patchOpEnum'
      path:
        type: string
      value:
        type: string
  accountIdentifierBase:
    discriminator: key
    properties:
      key:
        type: string
        description: Provides the account identifier type.
        minLength: 1
        maxLength: 256
      value:
        type: string
        description: Provides the account identifier type value.
        minLength: 1
        maxLength: 256
    required:
      - key
      - value
  accountCategory:
    description: Can be used to identify the sources of funds category where there are multiple accounts (wallets) held against an account holder.
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  bankAccountNo:
    description: Financial institution account number that is typically known by the account holder.
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  accountRank:
    description: Is used to identify the rank of the source of funds ranks where there are multiple accounts (wallets) held against an account holder.
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  identityAlias:
    description: 'An alias for the identity, e.g. short code for an agent till or company name/number for a bill payment.'
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  iban:
    description: Internationally agreed system of identifying bank accounts across national borders to facilitate the communication and processing of cross border transactions. Can contain up to 34 alphanumeric characters.
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  accountId:
    description: Identifier for the account holder.
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  msisdn:
    description: Mobile Number of the account holder. Should conform to ITU E.123.
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            pattern: "^\\+(?:[0-9] ?){6,14}[0-9]$"
            minLength: 1
            maxLength: 256
        required:
          - value
  payRef:
    description: 'Payment reference, i.e. utility bill number.'
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            minLength: 1
            maxLength: 256
        required:
          - value
  swiftbic:
    description: 'A bank identifier code (BIC) is a unique identifier for a specific financial institution. A BIC is composed of a 4-character bank code, a 2-character country code, a 2-character location code and an optional 3-character branch code. BICs are used by financial institutions for letters of credit, payments and securities transactions and other business messages between banks. Please refer to ISO 9362 for further information.'
    allOf:
      - $ref: '#/definitions/accountIdentifierBase'
      - properties:
          value:
            type: string
            pattern: '^[a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$'
            minLength: 1
            maxLength: 256
        required:
          - value
  transactionTypeEnum:
    type: string
    enum:
      - billPay
      - deposit
      - disbursement
      - transfer
      - merchantPayment
      - intTransfer
      - adjustment
      - reversal
      - withdrawal
#Added by AECA
      - requestTransfer
      - requestMerchantPayment
      - topUp
  countriesEnum:
    type: string
    enum:
      - BO
      - CO
      - CR
      - SV
      - GT
      - HN
      - NI
      - PY
  currenciesEnum:
    type: string
    enum:
      - BOB
      - COP
      - CRC
      - HNL
      - NIO
      - PYG
      - USD
  genderEnum:
    type: string
    enum:
      - M
      - F
      - U
  idTypeEnum:
    type: string
    enum:
      - passport
      - nationalRegistration
      - otherId
      - drivingLicence
      - socialSecurity
      - alienRegistration
      - nationalIdCard
      - employer
      - taxId
      - seniorCitizensCard
      - marriageCertificate
      - birthCertificate
      - healthCard
      - votersId
      - villageElderLetter
      - panCard
      - officialLetter
  deliveryMethodEnum:
    type: string
    enum:
      - directToAccount
      - agent
      - personalDelivery
  frequencyTypeEnum:
    type: string
    enum:
      - weekly
      - fortnight
      - monthSpecificDate
      - twoMonths
      - threeMonths
      - fourMonths
      - sixMonths
      - yearly
      - lastDayMonth
      - lastDayMonthWorking
      - lastMonday
      - lastTuesday
      - lastWednesday
      - lastThursday
      - lastFriday
      - lastSaturday
      - lastSunday
      - specificDayMonthly
  accountStatusEnum:
    type: string
    enum:
      - available
      - unavailable
      - unregistered
  mandateStatusEnum:
    type: string
    enum:
      - active
      - inactive
  linkStatusEnum:
    type: string
    enum:
      - active
      - inactive
  linkModeEnum:
    type: string
    enum:
      - push
      - pull
      - both
  quotationStatusEnum:
    type: string
    enum:
      - pending
      - rejected
      - completed
  patchOpEnum:
    type: string
    enum:
      - replace
      - add
  requestStateStatusEnum:
    type: string
    enum:
      - pending
      - completed
      - failed
  notificationMethodEnum:
    type: string
    enum:
      - callback
      - polling
  serviceStatusEnum:
    type: string
    enum:
      - available
      - unavailable
      - degraded
  errorCategoryEnum:
    type: string
    enum:
      - businessRule
      - validation
      - authorisation
      - identification
      - internal
      - serviceUnavailable
  errorCodeEnum:
    type: string
    enum:
      - genericError
      - dailyVolumeLimitExceeded
      - dailyValueLimitExceeded
      - weeklyVolumeLimitExceeded
      - weeklyValueLimitExceeded
      - monthlyVolumeLimitExceeded
      - monthlyValueLimitExceeded
      - accountMaxTotalVolumeExceeded
      - accountMaxTotalValueExceeded
      - lessThanTransactionMinValue
      - greaterThanTransactionMaxValue
      - maxBalanceExceed
      - samePartiesError
      - duplicateRequest
      - insufficientFunds
      - incorrectState
      - underPaymentNotAllowed
      - overPaymentNotAllowed
      - rateLimitError
      - transactionTypeError
      - noMandateAuthority
      - linkViolation
      - countryofOriginNotPermitted
      - nationalityNotPermitted
      - idDocumentNotSupported
      - issuingCountryNotSupported
      - quoteHasExpired
      - identifierError
      - lengthError
      - formatError
      - negativeValue
      - currencyNotSupported
      - mandatoryValueNotSupplied
      - invalidOffset
      - clientAuthorisationError
      - requestDeclined
      - servicingPartyAuthorisationError
      - requestingPartyAuthorisationError

#####....####...#####....####...##...##..######..######..######..#####....####..
##..##..##..##..##..##..##..##..###.###..##........##....##......##..##..##.....
#####...######..#####...######..##.#.##..####......##....####....#####....####..
##......##..##..##..##..##..##..##...##..##........##....##......##..##......##.
##......##..##..##..##..##..##..##...##..######....##....######..##..##...####..

parameters:
  correlationId:
    name: X-CorrelationID
    in: header
    description: Header parameter to uniquely identify the request
    required: true
    type: string
    pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'
  transactionReference:
    name: transactionReference
    in: path
    description: Path variable to uniquely identify the transaction
    required: true
    type: string
    minLength: 1
    maxLength: 256
  date:
    name: Date
    in: header
    description: Header parameter to indicate the date and time that the message was originated
    required: true
    type: string
    format: datetime
  requestTransaction:
    name: requestTransaction
    in: body
    description: Represents the request body of a transaction
    required: true
    schema:
      $ref: '#/definitions/requestTransaction'
  requestReversal:
    name: requestReversal
    in: body
    description: Represents the request body of a reversal
    required: true
    schema:
      $ref: '#/definitions/requestReversal'
  limit:
    name: limit
    in: query
    description: 'Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.'
    required: false
    type: integer
    format: int32
  offset:
    name: offset
    in: query
    description: 'Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 10 to 60.'
    required: false
    type: integer
    format: int32
  fromDateTime:
    name: fromDateTime
    in: query
    description: Indicates the minimum date for which records should be returned
    required: false
    type: string
    format: datetime
  toDateTime:
    name: toDateTime
    in: query
    description: Indicates the maximum date for which records should be returned
    required: false
    type: string
    format: datetime
  patch:
    name: patch
    in: body
    description: Represents the request body of a patch operation
    required: true
    schema:
      type: array
      minItems: 1
      maxItems: 10
      items:
        $ref: '#/definitions/patch'
  accountId:
    name: accountId
    in: path
    description: Path variable to uniquely identify an account
    required: true
    type: string
    pattern: "^(AccountCategory|BankAccountNo|AccountRank|IdentityAlias|IBAN|AccountID|MSISDN|PayRef|SWIFTBIC|SortCode|UtilityID|UserName|WalletID)(@.+?\\\\$(AccountCategory|BankAccountNo|AccountRank|IdentityAlias|IBAN|AccountID|MSISDN|PayRef|SWIFTBIC|SortCode|UtilityID|UserName|WalletID))*@(?!.*?\\\\$(AccountCategory|BankAccountNo|AccountRank|IdentityAlias|IBAN|AccountID|MSISDN|PayRef|SWIFTBIC|SortCode|UtilityID|UserName|WalletID).*).+?$"
  msisdn:
    name: msisdn
    in: path
    description: Path variable to uniquely identify an account (via MSISDN identifier)
    required: true
    type: string
    pattern: "^\\+(?:[0-9] ?){6,14}[0-9]$"
  requestDebitMandate:
    name: requestDebitMandate
    in: body
    description: Represents the request body of a debit mandate
    required: true
    schema:
      $ref: '#/definitions/requestDebitMandate'
  debitMandateReference:
    name: debitMandateReference
    in: path
    description: Path variable to uniquely identify a debit mandate
    required: true
    type: string
    minLength: 1
    maxLength: 256
  requestLink:
    name: requestLink
    in: body
    description: Represents the request body of a link
    required: true
    schema:
      $ref: '#/definitions/link'
  linkReference:
    name: linkReference
    in: path
    description: Path variable to uniquely identify a link
    required: true
    type: string
    minLength: 1
    maxLength: 256
  quotationReference:
    name: quotationReference
    in: path
    description: Path variable to uniquely identify a quotation
    required: true
    type: string
    minLength: 1
    maxLength: 256
  requestQuotation:
    name: requestQuotation
    in: body
    description: Represents the request body of a quotation request
    required: true
    schema:
      $ref: '#/definitions/requestQuotation'
  serverCorrelationId:
    name: serverCorrelationId
    in: path
    description: Path variable to uniquely identify a request state
    required: true
    type: string
    pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'
  clientCorrelationId:
    name: clientCorrelationId
    in: path
    description: Path variable to uniquely identify a response
    required: true
    type: string
    pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$'
#Added by AECA
  typeArray:
    name: type
    in: query
    required: false
    type: array
    description: 'Filter so only transactions that has matching type are returned. If ommited all types are included.'
    uniqueItems: true
    collectionFormat: pipes
    #collectionFormat: multi     -> for a single instance foo=bar&foo=baz
    items:
      $ref: '#/definitions/transactionTypeEnum'
  transactionStatus:
    name: status
    in: query
    required: false
    type: string
    description: 'Filter so only transactions that has matching status, as stored by the API provider,  are returned. If ommited all status are included. Possible values as defined by requestStateStatusEnum: pending, completed and failed.'

#####...######...####...#####....####...##..##...####...######...####..
##..##..##......##......##..##..##..##..###.##..##......##......##.....
#####...####.....####...#####...##..##..##.###...####...####.....####..
##..##..##..........##..##......##..##..##..##......##..##..........##.
##..##..######...####...##.......####...##..##...####...######...####..

responses:
  responseTransaction:
    description: Represents a Transaction response
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/responseTransaction'
  responseReversal:
    description: Represents a Reversal response
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/responseReversal'
  listTransaction:
    description: Represent a list of Transactions
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
      X-Records-Available-Count:
        description: Integer containing number of records that are available to be returned
        type: integer
        format: int32
    schema:
      type: array
      minItems: 1
      items:
        $ref: '#/definitions/responseTransaction'
  accountStatus:
    description: Represents the response body of an account status
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/accountStatus'
  accountName:
    description: Represents the response body of an account name
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/accountName'
  accountBalance:
    description: Represents the response body of an account balance
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/accountBalance'
  statementEntry:
    description: Represents the response body of a statement entry
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/statementEntry'
  listStatementEntry:
    description: Represents a list of statements
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      type: array
      minItems: 1
      items:
        $ref: '#/definitions/statementEntry'
  listBill:
    description: Represents a list of bills
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      type: array
      minItems: 1
      items:
        $ref: '#/definitions/bill'
  responseDebitMandate:
    description: Represents the response body of a debit mandate
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/responseDebitMandate'
  responseLink:
    description: Represents the response body of a link
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/responseLink'
  responseQuotation:
    description: Represents the response body of a quotation
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/responseQuotation'
  responseRequestState:
    description: Represents the response body of an asynchronous request
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/requestState'
  response:
    description: Represents the response body of a response
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/response'
  heartbeat:
    description: Represents the response body of a heartbeat
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/heartbeat'
  error:
    description: error object
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/error'
#Added by AECA
  responseKyc:
    description: Represents the response body of an account KYC
    headers:
      Date:
        description: The date and time that the response message was sent
        type: string
        format: datetime
    schema:
      $ref: '#/definitions/kyc'
